name: Build and Deploy Data Retrieval Service

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install AWS CLI via pip
        run: |
          pip install awscli --upgrade --user
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/l4k7s2p5/stocks-poc

      - name: Build Docker image
        run: |
          docker build -t public.ecr.aws/l4k7s2p5/stocks-poc/stocks-poc:latest .

      - name: Push Docker image to ECR Public
        run: |
          docker push public.ecr.aws/l4k7s2p5/stocks-poc/stocks-poc:latest

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file .github/workflows/drs-service-ecs.yaml \
            --stack-name stocks-poc-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              FlaskSecretKey=${{ secrets.FLASK_SECRET_KEY }} \
              FinnhubApiKey=${{ secrets.FINNHUB_API_KEY }} \
              RedditClientId=${{ secrets.REDDIT_CLIENT_ID }} \
              RedditClientSecret=${{ secrets.REDDIT_CLIENT_SECRET }} \
              AWSRegion=us-east-1 \
              ImageURL=public.ecr.aws/l4k7s2p5/stocks-poc/stocks-poc:latest \
              VpcId=${{ secrets.VPC_ID }} \
              PublicSubnet1=${{ secrets.PUBLIC_SUBNET_1 }} \
              PublicSubnet2=${{ secrets.PUBLIC_SUBNET_2 }}