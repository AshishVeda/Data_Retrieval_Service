AWSTemplateFormatVersion: 2010-09-09
Description: ECS Fargate setup for stockmarket service with ALB

Parameters:
  DB_HOST:
    Type: String
  DB_USER:
    Type: String
  DB_PASSWORD:
    Type: String
  DB_NAME:
    Type: String
  DB_PORT:
    Type: String
    Default: "3306"
  AWS_REGION:
    Type: String
  COGNITO_USER_POOL_ID:
    Type: String
  COGNITO_CLIENT_ID:
    Type: String
  COGNITO_CLIENT_SECRET:
    Type: String
  FLASK_SECRET_KEY:
    Type: String
  ALPHA_VANTAGE_API_KEY:
    Type: String
  REDDIT_CLIENT_ID:
    Type: String
  REDDIT_CLIENT_SECRET:
    Type: String
  REDDIT_USER_AGENT:
    Type: String
  FINNHUB_API_KEY:
    Type: String
  AWS_ACCESS_KEY_ID:
    Type: String
  AWS_SECRET_ACCESS_KEY:
    Type: String
  DYNAMODB_CHAT_TABLE:
    Type: String
  HF_TOKEN:
    Type: String
  API_URL:
    Type: String
  ImageURLStockMarket:
    Type: String
  VpcId:
    Type: String
  PublicSubnet1:
    Type: String
  PublicSubnet2:
    Type: String

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster

  StockMarketTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: stockmarket-task
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: "arn:aws:iam::303683327949:role/ecsTaskExecutionRole"
      TaskRoleArn: "arn:aws:iam::303683327949:role/ecsTaskRole"
      ContainerDefinitions:
        - Name: stockmarket_service
          Image: !Ref ImageURLStockMarket
          Essential: true
          PortMappings:
            - ContainerPort: 5000
          Environment:
            - Name: DB_HOST
              Value: !Ref DB_HOST
            - Name: DB_USER
              Value: !Ref DB_USER
            - Name: DB_PASSWORD
              Value: !Ref DB_PASSWORD
            - Name: DB_NAME
              Value: !Ref DB_NAME
            - Name: DB_PORT
              Value: !Ref DB_PORT
            - Name: AWS_REGION
              Value: !Ref AWS_REGION
            - Name: COGNITO_USER_POOL_ID
              Value: !Ref COGNITO_USER_POOL_ID
            - Name: COGNITO_CLIENT_ID
              Value: !Ref COGNITO_CLIENT_ID
            - Name: COGNITO_CLIENT_SECRET
              Value: !Ref COGNITO_CLIENT_SECRET
            - Name: FLASK_SECRET_KEY
              Value: !Ref FLASK_SECRET_KEY
            - Name: ALPHA_VANTAGE_API_KEY
              Value: !Ref ALPHA_VANTAGE_API_KEY
            - Name: REDDIT_CLIENT_ID
              Value: !Ref REDDIT_CLIENT_ID
            - Name: REDDIT_CLIENT_SECRET
              Value: !Ref REDDIT_CLIENT_SECRET
            - Name: REDDIT_USER_AGENT
              Value: !Ref REDDIT_USER_AGENT
            - Name: FINNHUB_API_KEY
              Value: !Ref FINNHUB_API_KEY
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref AWS_ACCESS_KEY_ID
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref AWS_SECRET_ACCESS_KEY
            - Name: DYNAMODB_CHAT_TABLE
              Value: !Ref DYNAMODB_CHAT_TABLE
            - Name: HF_TOKEN
              Value: !Ref HF_TOKEN
            - Name: API_URL
              Value: !Ref API_URL

          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/stockmarket
              awslogs-region: !Ref AWS_REGION
              awslogs-stream-prefix: ecs

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ALB to talk to ECS
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !Ref ALBSecurityGroup

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: stockmarket-alb
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref ALBSecurityGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: stockmarket-tg
      Port: 5000
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /ping
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - Listener
    Properties:
      ServiceName: stockmarket-service
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref StockMarketTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref ServiceSecurityGroup
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
      LoadBalancers:
        - ContainerName: stockmarket_service
          ContainerPort: 5000
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNS:
    Description: Public URL of your stockmarket service
    Value: !GetAtt LoadBalancer.DNSName